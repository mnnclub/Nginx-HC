
upstream SAMPLE_SERVERS {
    ip_hash;
    keepalive 1024;
    server 127.0.0.111:80 weight=1 max_fails=30 fail_timeout=30s; 
    server 127.0.0.222:80 weight=1 max_fails=30 fail_timeout=30s;

    ########### Health Check ############
    #-------------------------------------------------------------#
    # 1. Interval is 3s, if connect success 2 times -> it's OK
    #   but connect fail 5 times -> it's ERROR. and timeout is 4s
    # 2. About Health check
    #   2.1 Type is http protocol 
    #   2.2 Method is HEAD with HTTP1.0 
    # 3, If HTTP response code is 2XX or 3XX, it's OK
    #-------------------------------------------------------------#
    check interval=3000 rise=2 fall=5 timeout=4000 type=http;
    check_http_send "HEAD / HTTP/1.0\r\n\r\n";
#    check_http_send "HEAD /image/logo.png HTTP/1.0\r\n\r\n";
#    check_http_send "PUT /healthcheck HTTP/1.0\r\n\r\n";
    check_http_expect_alive http_2xx http_3xx;
}


server {
    listen	443 ssl http2;
    listen 	80;

    ssl_certificate /usr/local/nginx/conf/ssl/localhost.localdomain.crt;
    ssl_certificate_key /usr/local/nginx/conf/ssl/localhost.localdomain.key;

    server_name localhost.localdomain;
    server_name 127.0.0.1;

    ##chunked_transfer_encoding    off;
    proxy_redirect               off;
    proxy_connect_timeout         60; 
    proxy_send_timeout            60; 
    proxy_buffering               on; 
    proxy_buffer_size             8k; 
    proxy_buffers              8 64k;
    proxy_busy_buffers_size     128k;
    proxy_temp_file_write_size   64k;


    # 프락시로 넘어가면서 클라이언트IP 내부로바뀌지않고 원본그대로
    proxy_set_header Host $host;                    # 필수옵션
    proxy_set_header X-Real-IP $remote_addr;        # 필수옵션
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Host $host;


    # 세션끊겨서 로그인유지가 필요한 어드민은 ip_hash 기능있게끔
    location /admin/ {
	include /usr/local/nginx/conf/proxy_basic.txt;
        proxy_pass http://OAUTH_SERVERS;

    	access_log  /usr/local/nginx/logs/oauth.kocomsmart.com/admin-access.log  postdata;
	error_log   /usr/local/nginx/logs/oauth.kocomsmart.com/admin-error.log;
    }

    # 그외는 로드밸런싱 왔다갔다 무조건
    location / {
	include /usr/local/nginx/conf/proxy_basic.txt;
        proxy_pass http://OAUTH_SERVERS;

    	access_log  /usr/local/nginx/logs/oauth.kocomsmart.com/access.log  postdata;
	error_log   /usr/local/nginx/logs/oauth.kocomsmart.com/error.log;
    }



   location /status {
       check_status;

       access_log   off;
#       allow 222.108.131.250;
#       deny all;
  }

}

server {
#    listen      9100 ssl http2;
    listen      9100 ssl;

    ssl_certificate /usr/local/nginx/ssl/cer.pem;
    ssl_certificate_key /usr/local/nginx/ssl/key.pem;

    ssl_client_certificate  /usr/local/nginx/ssl/kocom.crt;
    ssl_verify_client on;

    server_name oauth2.kocomsmart.com;

    ##chunked_transfer_encoding    off;
    proxy_redirect               off;
    proxy_connect_timeout         60; 
    proxy_send_timeout            60; 
    proxy_buffering               on; 
    proxy_buffer_size             8k; 
    proxy_buffers              8 64k;
    proxy_busy_buffers_size     128k;
    proxy_temp_file_write_size   64k;


    # 프락시로 넘어가면서 클라이언트IP 내부로바뀌지않고 원본그대로
    proxy_set_header Host $host;                    # 필수옵션
    proxy_set_header X-Real-IP $remote_addr;        # 필수옵션
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Host $host;


    # 세션끊겨서 로그인유지가 필요한 어드민은 ip_hash 기능있게끔
    location / { 
        include /usr/local/nginx/conf/proxy_basic.txt;
        proxy_pass http://OAUTH_SERVERS_NineOne;

        access_log  /usr/local/nginx/logs/oauth.kocomsmart.com/NineOne-access.log  main;
        error_log   /usr/local/nginx/logs/oauth.kocomsmart.com/NineOne-error.log    debug;
    }   

}

